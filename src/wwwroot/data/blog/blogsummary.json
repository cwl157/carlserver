[{"id":1,"title":"Using C# dynamic Keyword To Replace Data Transfer Objects","summary":"For this post I'm going to show 3 examples of using the C# dynamic keyword when deserializing input data instead of using data transfer objects. Many modern applications need to accept data from a variety of sources. Often times we create data transfer objects just to handle requests and responses to and from the data source. Using dynamic in C# reduces the need for data transfer objects and keeps the logic that depends on the 3rd party data source contained to one place.","body":"","author":"Carl Layton","publishedDate":"2017-12-10T06:00:00Z","friendlyUri":"using-c#-dynamic-keyword-to-replace-data-transfer-objects","isPublished":true,"previousPostUri":null,"nextPostUri":null},{"id":2,"title":"Using Javascript Promises for Application Logic in an AngularJS Service","summary":"The example in this post shows how the $q service can be used to harness the power of javascript promises to perform application logic in an AngularJS application. This can help keep application code organized and separate responsibilities among controllers and services.","body":"","author":"Carl Layton","publishedDate":"2017-12-17T12:00:00Z","friendlyUri":"using-javascript-promises-for-application-logic-in-an-angularjs-service","isPublished":true,"previousPostUri":null,"nextPostUri":null}]